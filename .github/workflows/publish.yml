name: Publish Package

on:
  workflow_dispatch: {}
  push:
    branches:
      - release-v*

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  id-token: write
  contents: write
  attestations: write
  actions: write
  pull-requests: write

jobs:
  provenance:
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_nodejs_slsa3.yml@v2.0.0
    with:
      run-scripts: "install-pnpm, install-deps, style, nx-build-skip-cache, nx-test-skip-cache, skip-lib-ignore"
      node-version: "20.11.1"

  state:
    name: Check state
    permissions:
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.5.4
      - name: Prepare pre-requisites
        uses: ./.github/actions/prepare
      - id: state
        name: Get state
        uses: actions/github-script@v7
        env:
          TRIGGERING_ACTOR: ${{ github.triggering_actor }}
        with:
          result-encoding: string
          script: await require('./scripts/state.js')({ github, context, core })
    outputs:
      start: ${{ steps.state.outputs.start }}
      changesets: ${{ steps.state.outputs.changesets }}
      promote: ${{ steps.state.outputs.promote }}
      publish: ${{ steps.state.outputs.publish }}
      merge: ${{ steps.state.outputs.merge }}
      is_prerelease: ${{ steps.state.outputs.is_prerelease }}

  start:
    needs: state
    name: Start new release candidate
    permissions:
      contents: write
      actions: write
    if: needs.state.outputs.start == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.5.4
      - name: Prepare pre-requisites
        uses: ./.github/actions/prepare
      - id: start
        name: Create branch with release candidate
        run: bash scripts/start.sh
      - name: Re-run workflow
        uses: actions/github-script@v7
        env:
          REF: ${{ steps.start.outputs.branch }}
        with:
          script: await require('./scripts/rerun.js')({ github, context })

  promote:
    needs: state
    name: Promote to final release
    permissions:
      contents: write
      actions: write
    if: needs.state.outputs.promote == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.5.4
      - name: Prepare pre-requisites
        uses: ./.github/actions/prepare
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@01dd5d3ca463c7f10f7f4f7b4f177225ac661ee4
        with:
          gpg_private_key: ${{ secrets.SVC_GPG_KEY }}
          passphrase: ${{ secrets.SVC_GPG_PASSPHRASE }}
          git_config_global: true
          git_tag_gpgsign: true
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Exit prerelease state
        if: needs.state.outputs.is_prerelease == 'true'
        run: bash scripts/exit-prerelease.sh
      - name: Re-run workflow
        uses: actions/github-script@v7
        with:
          script: await require('./scripts/rerun.js')({ github, context })

  changesets:
    needs: state
    name: Update PR to release
    permissions:
      contents: write
      pull-requests: write
    if: needs.state.outputs.changesets == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.5.4
        with:
          fetch-depth: 0
      - name: Prepare pre-requisites
        uses: ./.github/actions/prepare
      - name: Set release title
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: await require('./scripts/set-changesets-pr-title.js')({ core })
      - name: Create PR
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRERELEASE: ${{ needs.state.outputs.is_prerelease }}
        with:
          version: pnpm run version
          title: ${{ env.TITLE }}
          commit: ${{ env.TITLE }}
          body: |
            This is an automated PR for releasing ${{ github.repository }}
            Check [CHANGELOG.md](${{ github.repository }}/CHANGELOG.md)

  publish:
    needs: state
    name: Publish to npm
    environment: npm
    permissions:
      contents: write
    if: needs.state.outputs.publish == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.5.4
      - name: Prepare pre-requisites
        uses: ./.github/actions/prepare
      - id: pack
        name: pack
        run: bash scripts/pack.sh
        env:
          PRERELEASE: ${{ needs.state.outputs.is_prerelease }}
      - name: Publish
        run: bash scripts/publish.sh
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          TARBALL: ${{ steps.pack.outputs.tarball }}
          TAG: ${{ steps.version.outputs.tag }}
      - name: Create Github Release
        uses: actions/github-script@v7
        env:
          PRERELEASE: ${{ needs.state.outputs.is_prerelease }}
        with:
          script: await require('./scripts/github-release.js')({ github, context })

  sbom-attestations:
    needs: [provenance]
    name: SBOM Attestations
    if: needs.state.outputs.publish == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Download Artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8

      - name: Checkout Repo
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.5.4
        with:
          token: ${{ secrets.SAI_PAT }}

      - name: Prepare pre-requisites
        uses: ./.github/actions/prepare

      - name: Create temp dir
        id: temp-dir
        run: |
          set -euo pipefail

          temp_dir=$(mktemp -d)
          echo "path=${temp_dir}" >>"${GITHUB_OUTPUT}"

      - name: Download tarball
        uses: slsa-framework/slsa-github-generator/.github/actions/secure-download-artifact@3bcecb4ade4f265cff30488059a9dca39e26b360 # main
        with:
          name: ${{ needs.provenance.outputs.package-download-name }}
          path: "${{ steps.temp-dir.outputs.path }}/${{ needs.provenance.outputs.package-name }}"
          sha256: ${{ needs.provenance.outputs.package-download-sha256 }}

      - name: Download provenance
        uses: slsa-framework/slsa-github-generator/actions/nodejs/secure-attestations-download@3bcecb4ade4f265cff30488059a9dca39e26b360 # v1.6.0
        with:
          name: ${{ needs.provenance.outputs.provenance-download-name }}
          path: "${{ steps.temp-dir.outputs.path }}"
          sha256: ${{ needs.provenance.outputs.provenance-download-sha256 }}

      - name: Unpack the zipped artifact
        run: |
          set -euo pipefail
          cd "${{ steps.temp-dir.outputs.path }}"
          tar -xzvf "${{ needs.provenance.outputs.package-name }}" -C $GITHUB_WORKSPACE --strip-components=1
          cd "$GITHUB_WORKSPACE"
          pnpm run install-deps
          pnpm nx-test-skip-cache

      - name: Generate SBOM
        uses: anchore/sbom-action@d94f46e13c6c62f59525ac9a1e147a99dc0b9bf5
        with:
          artifact-name: sbom-${{ github.event.repository.name }}-${{ inputs.version_tag }}.spdx.json
          output-file: /${{ steps.temp-dir.outputs.path }}/sbom-${{ github.event.repository.name }}-${{ inputs.version_tag }}.spdx.json
          upload-artifact: false
          upload-release-assets: false

      - name: Download Artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16

      - name: Upload attestations SLSA
        uses: actions/attest-build-provenance@5e9cb68e95676991667494a6a4e59b8a2f13e1d0
        with:
          subject-path: ${{ needs.provenance.outputs.provenance-download-name }}
          subject-name: ${{ github.event.repository.name }}-${{ inputs.version_tag }}

      - name: Upload attestations SBOM
        uses: actions/attest-build-provenance@5e9cb68e95676991667494a6a4e59b8a2f13e1d0
        with:
          subject-path: /${{ steps.temp-dir.outputs.path }}/sbom-${{ github.event.repository.name }}-${{ inputs.version_tag }}.spdx.json

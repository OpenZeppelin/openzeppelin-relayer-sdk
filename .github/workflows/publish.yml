name: Publish Package

on:
  workflow_dispatch:
    inputs:
      version_tag:
        required: false
        description: The release version
        type: string
  push:
    branches:
      - PLAT-6439-release-wf # temporary - to be removed before merge

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write
  attestations: write
  actions: write
  id-token: write

jobs:
  provenance:
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_nodejs_slsa3.yml@v2.0.0
    with:
      run-scripts: "install-pnpm, install-deps, style, nx-build-skip-cache, nx-test-skip-cache"
      node-version: "20.11.1"

  harden-runner:
    needs: [provenance]
    name: Harden runner
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Download Artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16  # v4.1.8

  gh-app-token:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@af35edadc00be37caa72ed9f3e6d5f7801bfdf09 # v1.11.7
        id: gh-app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
        outputs:
          token: ${{ steps.gh-app-token.outputs.token }}

  start:
    needs: [state,gh-app-token]
    name: Start new release candidate
    permissions:
      contents: write
      actions: write
      pull-requests: write
    if: needs.state.outputs.start == 'false'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.5.4
        with:
          token: ${{ needs.gh-app-token.outputs.token }}
      - name: Prepare pre-requisites
        uses: ./.github/actions/prepare
        with:
          token: ${{ needs.gh-app-token.outputs.token }}
      - run: npx changeset pre enter rc
        shell: bash
      - run: git status
        shell: bash
      - name: Commit changes
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e
        with:
          commit-message: "🤖 chore: Push the release candidate change"
          title: "chore: 🤖 [Automated PR] Push the release candidate change"
          token: ${{ secrets.GITHUB_TOKEN }}
          sign-commits: true
          body: |
            This PR adds the RC changes
      - name: Re-run workflow
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          REF: ${{ steps.start.outputs.branch }}
        with:
          script: await require('./scripts/dispatch.js')({ github, context })

  state:
    needs: gh-app-token
    name: Check state
    permissions:
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@af35edadc00be37caa72ed9f3e6d5f7801bfdf09 # v1.11.7
        id: gh-app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Checkout Repo
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.5.4
        with:
          token: ${{ steps.gh-app-token.outputs.token }}

      - name: Prepare pre-requisites
        uses: ./.github/actions/prepare
        with:
          token: ${{ steps.gh-app-token.outputs.token }}
      - id: state
        name: Get state
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          TRIGGERING_ACTOR: ${{ github.triggering_actor }}
        with:
          result-encoding: string
          script: await require('./scripts/state.js')({ github, context, core })
    outputs:
      # Job Flags
      start: ${{ steps.state.outputs.start }}
      changesets: ${{ steps.state.outputs.changesets }}
      promote: ${{ steps.state.outputs.promote }}
      publish: ${{ steps.state.outputs.publish }}
      merge: ${{ steps.state.outputs.merge }}

      # Global variables
      is_prerelease: ${{ steps.state.outputs.is_prerelease }}

  promote:
    needs: [state, gh-app-token]
    name: Promote to final release
    permissions:
      contents: write
      actions: write
      pull-requests: write
    if: needs.state.outputs.promote == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@af35edadc00be37caa72ed9f3e6d5f7801bfdf09 # v1.11.7
        id: gh-app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.5.4
        with:
          token: ${{ steps.gh-app-token.outputs.token }}
      - name: Prepare pre-requisites
        uses: ./.github/actions/prepare
        with:
          token: ${{ steps.gh-app-token.outputs.token }}
      - name: Exit prerelease state
        if: needs.state.outputs.is_prerelease == 'true'
        run: npx changeset pre exit rc
        shell: bash
      - name: Commit changes
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e
        with:
          commit-message: "🤖 chore: Push changes to exit RC"
          title: "chore: 🤖 [Automated PR] Push changes to exit RC"
          token: ${{ secrets.GITHUB_TOKEN }}
          sign-commits: true
          body: |
            This PR pushes changes to exit RC
      - name: Re-run workflow
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: await require('./scripts/dispatch.js')({ github, context })

  changesets:
    needs: [state, gh-app-token]
    name: Update PR to release
    permissions:
      contents: write
      pull-requests: write
    if: needs.state.outputs.changesets == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@af35edadc00be37caa72ed9f3e6d5f7801bfdf09 # v1.11.7
        id: gh-app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.5.4
        with:
          token: ${{ steps.gh-app-token.outputs.token }}
          fetch-depth: 0
      - name: Prepare pre-requisites
        uses: ./.github/actions/prepare
        with:
          token: ${{ steps.gh-app-token.outputs.token }}
      - name: Create PR
        uses: changesets/action@3de3850952bec538fde60aac71731376e57b9b57 # v1.4.8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PRERELEASE: ${{ needs.state.outputs.is_prerelease }}
        with:
          version: pnpm ci:version
          title: "ci: update the version packages"
          commit: "ci: update the version packages"

  # publish-rc:
  #   needs: [state, gh-app-token]
  #   name: Publish RC to npm
  #   environment: npm
  #   permissions:
  #     contents: write
  #   if: needs.state.outputs.publish == 'true' && github.ref == 'refs/heads/develop'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/create-github-app-token@af35edadc00be37caa72ed9f3e6d5f7801bfdf09 # v1.11.7
  #       id: gh-app-token
  #       with:
  #         app-id: ${{ vars.GH_APP_ID }}
  #         private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
  #     - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.5.4
  #       with:
  #         token: ${{ steps.gh-app-token.outputs.token }}
  #     - name: Set up environment
  #       uses: ./.github/actions/prepare
  #       with:
  #         token: ${{ steps.gh-app-token.outputs.token }}
  #     - id: pack
  #       name: Pack
  #       run: bash scripts/pack.sh
  #       env:
  #         PRERELEASE: ${{ needs.state.outputs.is_prerelease }}
  #     - name: Upload tarball artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ${{ github.ref_name }}
  #         path: ${{ steps.pack.outputs.tarball }}
  #     - name: Publish RC
  #       run: |
  #           echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc
  #           pnpm publish "$TARBALL" --tag "$TAG"
  #       shell: bash
  #       env:
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  #         TARBALL: ${{ steps.pack.outputs.tarball }}
  #         TAG: ${{ steps.pack.outputs.tag }}
  #         NPM_CONFIG_PROVENANCE: true
  #     - name: Extract release notes
  #       uses: ffurrer2/extract-release-notes@cae32133495112d23e3569ad04fef240ba4e7bc8
  #       id: extract_release_notes
  #       with:
  #         changelog_file: CHANGELOG.md
  #     - name: Create Github Release
  #       uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda
  #       with:
  #         tag_name: v${{ steps.pack.outputs.tag }}
  #         body: ${{ steps.extract_release_notes.outputs.release_notes }}
  #         prerelease: ${{ needs.state.outputs.is_prerelease }}
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-main:
    needs: [state, gh-app-token]
    name: Publish main to npm
    environment: npm
    permissions:
      contents: write
    if: needs.state.outputs.publish == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.5.4
        with:
          token: ${{ steps.gh-app-token.outputs.token }}
      - name: Set up environment
        uses: ./.github/actions/prepare
        with:
          token: ${{ steps.gh-app-token.outputs.token }}
      - id: pack
        name: Pack
        run: bash scripts/pack.sh
        env:
          PRERELEASE: ${{ needs.state.outputs.is_prerelease }}
      - name: Upload tarball artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.ref_name }}
          path: ${{ steps.pack.outputs.tarball }}
      - name: Publish main
        run: |
            echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > .npmrc
            pnpm publish "$TARBALL" --tag "$TAG"
        shell: bash
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          TARBALL: ${{ steps.pack.outputs.tarball }}
          TAG: ${{ steps.pack.outputs.tag }}
          NPM_CONFIG_PROVENANCE: true
      - name: Extract release notes
        uses: ffurrer2/extract-release-notes@v1
        id: extract_release_notes
        with:
          changelog_file: CHANGELOG.md
      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.pack.outputs.tag }}
          body: ${{ steps.extract_release_notes.outputs.release_notes }}
          prerelease: ${{ needs.state.outputs.is_prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  merge-main-to-develop:
    needs: state
    name: Create PR back to develop branch
    permissions:
      contents: write
      pull-requests: write
    if: needs.state.outputs.merge == 'true'
    runs-on: ubuntu-latest
    env:
      MERGE_BRANCH: merge/${{ github.ref_name }}
    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.5.4
        with:
          token: ${{ steps.gh-app-token.outputs.token }}
      - name: Set up environment
        uses: ./.github/actions/prepare
      - name: Create branch to merge
        run: |
          git checkout -b "$MERGE_BRANCH" "$GITHUB_REF_NAME"
          git push -f origin "$MERGE_BRANCH"
      - name: Create PR back to main
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: process.env.MERGE_BRANCH,
              base: 'develop',
              title: '${{ format('Merge {0} branch', github.ref_name) }}'

  sbom:
    needs: [publish-main]
    runs-on: ubuntu-latest
    steps:
      - name: Generate SBOM
        uses: anchore/sbom-action@d94f46e13c6c62f59525ac9a1e147a99dc0b9bf5
        with:
          artifact-name: sbom-${{ github.event.repository.name }}-${{ inputs.version_tag }}.spdx.json
          output-file: /${{ steps.temp-dir.outputs.path }}/sbom-${{ github.event.repository.name }}-${{ inputs.version_tag }}.spdx.json
          upload-artifact: false
          upload-release-assets: false

      - name: Download Artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16

      - name: Upload attestations SLSA
        uses: actions/attest-build-provenance@5e9cb68e95676991667494a6a4e59b8a2f13e1d0
        with:
          subject-path: ${{ needs.provenance.outputs.provenance-download-name }}
          subject-name: ${{ github.event.repository.name }}-${{ inputs.version_tag }}

      - name: Upload attestations SBOM
        uses: actions/attest-build-provenance@5e9cb68e95676991667494a6a4e59b8a2f13e1d0
        with:
          subject-path: /${{ steps.temp-dir.outputs.path }}/sbom-${{ github.event.repository.name }}-${{ inputs.version_tag }}.spdx.json
